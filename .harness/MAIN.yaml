pipeline:
  name: MAIN
  identifier: MAIN
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: Main_GITHUB
        build: <+input>
  stages:
    - stage:
        name: Build and Test
        identifier: Build_and_Test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Action
                  name: Set up Java
                  identifier: setup_java
                  spec:
                    uses: actions/setup-java@v3
                    with:
                      distribution: temurin
                      java-version: "21"
              - step:
                  type: Run
                  name: Build with Gradle
                  identifier: Build_with_Gradle
                  spec:
                    shell: Sh
                    command: |-
                      cd apex-airline-system/backend
                      ./gradlew test
                  description: Run Gradle tests
              - step:
                  type: Run
                  name: Build Docker Image
                  identifier: Build_Docker_Image
                  spec:
                    shell: Sh
                    command: |-
                      cd apex-airline-system/backend
                      docker build -t avianca-backend .
                  description: Build Docker image
              - step:
                  type: Run
                  name: Push Docker Image
                  identifier: Push_Docker_Image
                  spec:
                    shell: Sh
                    command: |-
                      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                      docker tag avianca-backend jpestrada/harnessimages:${TAG_NAME}
                      docker push jpestrada/harnessimages:${TAG_NAME}
                  description: Push Docker image to Docker Hub
                  env:
                    - name: DOCKER_USERNAME
                      value: jpestrada
                    - name: DOCKER_PASSWORD
                      value: juan1593
                    - name: TAG_NAME
                      value: latest
          caching:
            enabled: false
            paths: []
        delegateSelectors:
          - docker-delegate
  notificationRules:
    - name: Failure-Email
      identifier: FailureEmail
      pipelineEvents:
        - type: PipelineFailed
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - jpestrada@unis.edu.gt
            - juanpablo08082002@hotmail.com
      enabled: true
